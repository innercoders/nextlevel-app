import { DotaHero } from "./dota-hero";
import { DotaLeague } from "./dota-league";
import { DotaMatchPlayer } from "./dota-match-player";

export interface DotaMatch {
    id: string;
    matchId: string;
    didRadiantWin: boolean;
    durationSeconds: number;
    durationSecondsFormatted: string;
    startDateTime: Date;
    endDateTime: Date;  
    towerStatusRadiant: boolean;
    towerStatusDire: boolean;
    barracksStatusRadiant: boolean;
    barracksStatusDire: boolean;
    lobbyType: string;
    gameMode: string;
    tournamentId: string;
    radiantTeamId: number;
    radiantTeamName: string;
    radiantTeamLogoUrl: string;
    direTeamId: number;
    direTeamName: string;
    direTeamLogoUrl: string;
    regionId: string;
    analysisOutcome: string;
    predictionOutcomeWeight: number;
    radiantNetWorthLeads: number[];
    radiantExperienceLeads: number[];
    direTeamScore: number;
    radiantTeamScore: number;
    direKills: number[];
    radiantKills: number[];
    winRates: number[];
    predictedWinRates: number[];
    bottomLaneOutcome: string;
    midLaneOutcome: string;
    topLaneOutcome: string;
    cluster: string;
    replaySalt: string;
    status: string;
    players: DotaMatchPlayer[];
    averageMmr: number;
    serverSteamId: string;
    league: DotaLeague;
    picksBans: {heroId: number, isPick: boolean, team: number, dotaHero?: DotaHero}[];
    objectivesData: { key?: string, slot?: number, time?: number, type?: string, playerSlot?: number }[];
}